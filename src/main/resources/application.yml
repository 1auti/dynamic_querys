# Configuración principal de la aplicación

# Mapeo de provincias a datasources (ESENCIAL para el RepositoryFactory)
provincia:
  mapping:
    "Buenos Aires": pba
    "Avellaneda": mda
    "La Pampa": santa-rosa
    "Chaco": chaco
    "Entre Ríos": entre-rios
    "Formosa": formosa

# Configuración de las bases de datos
spring:
  datasource:
    pba:
      jdbc-url: ${PBA_URL:jdbc:postgresql://localhost:5432/pba_db}
      username: ${PBA_USERNAME:postgres}
      password: ${PBA_PASSWORD:password}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 3
        minimum-idle: 1
        connection-timeout: 20000
        idle-timeout: 300000
        max-lifetime: 1200000
        leak-detection-threshold: 60000
    mda:
      jdbc-url: ${MDA_URL:jdbc:postgresql://localhost:5432/mda_db}
      username: ${MDA_USERNAME:postgres}
      password: ${MDA_PASSWORD:password}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 3
        minimum-idle: 1
        connection-timeout: 20000
        idle-timeout: 300000
        max-lifetime: 1200000
        leak-detection-threshold: 60000
    santa-rosa:
      jdbc-url: ${SANTA_ROSA_URL:jdbc:postgresql://localhost:5432/santa_rosa_db}
      username: ${SANTA_ROSA_USERNAME:postgres}
      password: ${SANTA_ROSA_PASSWORD:password}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 3
        minimum-idle: 1
        connection-timeout: 20000
        idle-timeout: 300000
        max-lifetime: 1200000
        leak-detection-threshold: 60000
    chaco:
      jdbc-url: ${CHACO_URL:jdbc:postgresql://localhost:5432/chaco_db}
      username: ${CHACO_USERNAME:postgres}
      password: ${CHACO_PASSWORD:password}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 3
        minimum-idle: 1
        connection-timeout: 20000
        idle-timeout: 300000
        max-lifetime: 1200000
        leak-detection-threshold: 60000
    entre-rios:
      jdbc-url: ${ENTRE_RIOS_URL:jdbc:postgresql://localhost:5432/entre_rios_db}
      username: ${ENTRE_RIOS_USERNAME:postgres}
      password: ${ENTRE_RIOS_PASSWORD:password}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 3
        minimum-idle: 1
        connection-timeout: 20000
        idle-timeout: 300000
        max-lifetime: 1200000
        leak-detection-threshold: 60000
    formosa:
      jdbc-url: ${FORMOSA_URL:jdbc:postgresql://localhost:5432/formosa_db}
      username: ${FORMOSA_USERNAME:postgres}
      password: ${FORMOSA_PASSWORD:password}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 3
        minimum-idle: 1
        connection-timeout: 20000
        idle-timeout: 300000
        max-lifetime: 1200000
        leak-detection-threshold: 60000

  # Configuración HTTP y Tomcat
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

  # Jackson JSON limits
  spring:
    jackson:
      deserialization:
        fail-on-unknown-properties: false


# Configuración del servidor
server:
  port: ${SERVER_PORT:8080}
  tomcat:
    max-connections: 50
    threads:
      max: 20
      min-spare: 5
    connection-timeout: 30000
    max-http-post-size: 52428800
  error:
    include-message: always
    include-binding-errors: always

# Configuración de queries
queries:
  path: "classpath:queries/"
  files:
    - "consultar_personas_juridicas.sql"
    - "reporte_infracciones_detallado.sql"
    - "reporte_infracciones_general.sql"
    - "reporte_radar_fijo_por_equipo.sql"
    - "reporte_semaforo_por_equipo.sql"
    - "reporte_vehiculos_por_municipio.sql"
    - "reporte_sin_email_por_municipio.sql"
    - "verificar_imagenes_subidas_radar_concesion.sql"

# Configuración de la aplicación
app:
  limits:
    max-records-sync: 10000         # Para que consultas de hasta 5000 usen procesamiento síncrono
    max-records-total: 100000       # Máximo absoluto de registros
    max-records-display: 5000       # Máximo para endpoints de consulta (Postman-friendly)
    max-concurrent-queries: 10      # Máximo de consultas concurrentes
  batch:
    size: 10000                     # Lotes más grandes
    chunk-size: 2000                # Chunks más grandes
    max-memory-per-batch: 200       # Más memoria por lote
    memory-critical-threshold: 0.80 # Más conservador
    timeout-seconds: 120            # Más tiempo para queries grandes

  # Configuración para threads asíncronos
  async:
    thread-pool-size: 10
# Configuración de logging
logging:
  level:
    org.transito_seguro: DEBUG
    org.springframework.jdbc: DEBUG
    com.zaxxer.hikari: INFO
    org.postgresql: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Actuator para monitoreo
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info
  endpoint:
    health:
      show-details: when_authorized
    metrics:
      enabled: true